
/*
Prerequisites:
1. Docker Desktop must be installed on your system
2. Open terminal and navigate to the test-api-docker-image folder
3. Start the test API by running: docker-compose up -d
   The API will be available at http://localhost:8000/
4. To stop the API when done, run: docker compose down

This test demonstrates how to make a simple HTTP GET request using k6.
The 'http' module provides methods for making HTTP requests.
*/
import http from 'k6/http';
import { check } from 'k6';

/* The default function is the entry point for the k6 test. */
export default function () {
    /*
    Perform a GET request to the specified URL.
    The response is stored in the 'res' variable, which can be used for further checks or logging.
    */
   let res = http.get('http://localhost:8000/public/crocodiles/');
   /* The response is parsed as an array of objects with id and name properties. */
   const crocodiles = res.json() as Array<{ id: number, name: string }>;
   /* The first crocodile's id and name are extracted from the array. */
   const crocodileId = crocodiles?.[0]?.id;
   /* The first crocodile's name is extracted from the array. */
   const crocodileName = crocodiles?.[0]?.name;

   /* A GET request is made to the specified URL. */  
   res =http.get(`http://localhost:8000/public/crocodiles/${crocodileId}/`);
   
   console.log(res.headers['Content-Type']);
   /* The response is checked to ensure the status is 200 and the crocodile name matches the expected name. */
   check(res, {
        'status was 200': (r) => r.status == 200,
        'crocodile name': (r) => (r.json() as { name: string })?.name === crocodileName,
    });
}

/*
---
To run this test and see detailed HTTP request/response information, use the following commands:

1. Show full HTTP debug output (headers, bodies, etc):
   k6 run --http-debug="full" 16-http-get.ts

2. Show basic HTTP debug output (headers only):
   k6 run --http-debug 16-http-get.ts

The --http-debug flag is useful for troubleshooting and understanding the HTTP traffic generated by your test.
*/